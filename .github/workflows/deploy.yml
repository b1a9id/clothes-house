# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  build:
    if: github.event.pull_request.merged == true

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Execute test
      run: ./gradlew build
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./build/reports/jacoco/report.xml
        fail_ci_if_error: true
    - name: Build with Gradle and create Dockerfile
      run: rm frontend/.env && echo REACT_APP_API_URL=https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com > frontend/.env && cat frontend/.env && ./gradlew jibDockerBuild --image registry.heroku.com/${{secrets.HEROKU_APP_NAME}}/web
    - name: Login to Heroku Container registry
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login
    - name: Push to heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: docker push registry.heroku.com/${{secrets.HEROKU_APP_NAME}}/web
    - name: Release 
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:release -a ${{secrets.HEROKU_APP_NAME}} web
